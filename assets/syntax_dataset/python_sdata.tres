[gd_resource type="Resource" script_class="Syntax" load_steps=9 format=3 uid="uid://e21p7h0bjxmm"]

[ext_resource type="Script" path="res://scripts/resources/double_sided_char_pairs.gd" id="1_jaa6t"]
[ext_resource type="Script" path="res://scripts/resources/syntax_data.gd" id="1_lthmv"]

[sub_resource type="Resource" id="Resource_ju4sk"]
script = ExtResource("1_jaa6t")
left_side = "("
right_side = ")"

[sub_resource type="Resource" id="Resource_0pais"]
script = ExtResource("1_jaa6t")
left_side = "["
right_side = "]"

[sub_resource type="Resource" id="Resource_vfoqa"]
script = ExtResource("1_jaa6t")
left_side = "{"
right_side = "}"

[sub_resource type="Resource" id="Resource_6sg5d"]
script = ExtResource("1_jaa6t")
left_side = "'"
right_side = "'"

[sub_resource type="Resource" id="Resource_6h1u0"]
script = ExtResource("1_jaa6t")
left_side = "\""
right_side = "\""

[sub_resource type="CodeHighlighter" id="CodeHighlighter_crey3"]
number_color = Color(0.682353, 0.505882, 1, 1)
symbol_color = Color(0.992157, 1, 1, 1)
function_color = Color(0.65098, 0.886275, 0.180392, 1)
member_variable_color = Color(0.4, 0.85098, 0.937255, 1)
keyword_colors = {
"False": Color(0.976471, 0.14902, 0.447059, 1),
"None": Color(0.976471, 0.14902, 0.447059, 1),
"NoneType": Color(0.4, 0.85098, 0.937255, 1),
"True": Color(0.976471, 0.14902, 0.447059, 1),
"and": Color(0.976471, 0.14902, 0.447059, 1),
"as": Color(0.976471, 0.14902, 0.447059, 1),
"assert": Color(0.976471, 0.14902, 0.447059, 1),
"async": Color(0.976471, 0.14902, 0.447059, 1),
"await": Color(0.976471, 0.14902, 0.447059, 1),
"bool": Color(0.4, 0.85098, 0.937255, 1),
"break": Color(0.976471, 0.14902, 0.447059, 1),
"bytearray": Color(0.4, 0.85098, 0.937255, 1),
"bytes": Color(0.4, 0.85098, 0.937255, 1),
"class": Color(0.976471, 0.14902, 0.447059, 1),
"complex": Color(0.4, 0.85098, 0.937255, 1),
"continue": Color(0.976471, 0.14902, 0.447059, 1),
"def": Color(0.976471, 0.14902, 0.447059, 1),
"del": Color(0.976471, 0.14902, 0.447059, 1),
"dict": Color(0.4, 0.85098, 0.937255, 1),
"elif": Color(0.976471, 0.14902, 0.447059, 1),
"else": Color(0.976471, 0.14902, 0.447059, 1),
"except": Color(0.976471, 0.14902, 0.447059, 1),
"finally": Color(0.976471, 0.14902, 0.447059, 1),
"float": Color(0.4, 0.85098, 0.937255, 1),
"for": Color(0.976471, 0.14902, 0.447059, 1),
"from": Color(0.976471, 0.14902, 0.447059, 1),
"frozenset": Color(0.4, 0.85098, 0.937255, 1),
"global": Color(0.976471, 0.14902, 0.447059, 1),
"if": Color(0.976471, 0.14902, 0.447059, 1),
"import": Color(0.976471, 0.14902, 0.447059, 1),
"in": Color(0.976471, 0.14902, 0.447059, 1),
"int": Color(0.4, 0.85098, 0.937255, 1),
"is": Color(0.976471, 0.14902, 0.447059, 1),
"lambda": Color(0.976471, 0.14902, 0.447059, 1),
"list": Color(0.4, 0.85098, 0.937255, 1),
"memoryview": Color(0.4, 0.85098, 0.937255, 1),
"nonlocal": Color(0.976471, 0.14902, 0.447059, 1),
"not": Color(0.976471, 0.14902, 0.447059, 1),
"or": Color(0.976471, 0.14902, 0.447059, 1),
"pass": Color(0.976471, 0.14902, 0.447059, 1),
"raise": Color(0.976471, 0.14902, 0.447059, 1),
"range": Color(0.4, 0.85098, 0.937255, 1),
"return": Color(0.976471, 0.14902, 0.447059, 1),
"set": Color(0.4, 0.85098, 0.937255, 1),
"str": Color(0.4, 0.85098, 0.937255, 1),
"try": Color(0.976471, 0.14902, 0.447059, 1),
"tuple": Color(0.4, 0.85098, 0.937255, 1),
"while": Color(0.976471, 0.14902, 0.447059, 1),
"with": Color(0.976471, 0.14902, 0.447059, 1),
"yield": Color(0.976471, 0.14902, 0.447059, 1)
}
color_regions = {
"\" \"": Color(0.992157, 0.592157, 0.121569, 1),
"' '": Color(0.992157, 0.592157, 0.121569, 1)
}

[resource]
script = ExtResource("1_lthmv")
delimiters = "
	\\/.,*+-="
highlighter = SubResource("CodeHighlighter_crey3")
single_line_comment_char = "#"
keywords = Array[StringName]([&"False", &"None", &"NoneType", &"True", &"and", &"as", &"assert", &"async", &"await", &"bool", &"break", &"bytearray", &"bytes", &"class", &"complex", &"continue", &"def", &"del", &"dict", &"elif", &"else", &"except", &"finally", &"float", &"for", &"from", &"frozenset", &"global", &"if", &"import", &"in", &"int", &"is", &"lambda", &"list", &"memoryview", &"nonlocal", &"not", &"or", &"pass", &"raise", &"range", &"return", &"set", &"str", &"try", &"tuple", &"while", &"with", &"yield"])
doublesided_characters = Array[Object]([SubResource("Resource_ju4sk"), SubResource("Resource_0pais"), SubResource("Resource_vfoqa"), SubResource("Resource_6sg5d"), SubResource("Resource_6h1u0")])
