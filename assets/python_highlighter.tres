[gd_resource type="CodeHighlighter" format=3 uid="uid://dmdi2fpi4xya4"]

[resource]
number_color = Color(0.682353, 0.505882, 1, 1)
symbol_color = Color(0.992157, 1, 1, 1)
function_color = Color(0.65098, 0.886275, 0.180392, 1)
member_variable_color = Color(0.4, 0.85098, 0.937255, 1)
keyword_colors = {
"False": Color(0.976471, 0.14902, 0.447059, 1),
"None": Color(0.976471, 0.14902, 0.447059, 1),
"NoneType": Color(0.4, 0.85098, 0.937255, 1),
"True": Color(0.976471, 0.14902, 0.447059, 1),
"and": Color(0.976471, 0.14902, 0.447059, 1),
"as": Color(0.976471, 0.14902, 0.447059, 1),
"assert": Color(0.976471, 0.14902, 0.447059, 1),
"async": Color(0.976471, 0.14902, 0.447059, 1),
"await": Color(0.976471, 0.14902, 0.447059, 1),
"bool": Color(0.4, 0.85098, 0.937255, 1),
"break": Color(0.976471, 0.14902, 0.447059, 1),
"bytearray": Color(0.4, 0.85098, 0.937255, 1),
"bytes": Color(0.4, 0.85098, 0.937255, 1),
"class": Color(0.976471, 0.14902, 0.447059, 1),
"complex": Color(0.4, 0.85098, 0.937255, 1),
"continue": Color(0.976471, 0.14902, 0.447059, 1),
"def": Color(0.976471, 0.14902, 0.447059, 1),
"del": Color(0.976471, 0.14902, 0.447059, 1),
"dict": Color(0.4, 0.85098, 0.937255, 1),
"elif": Color(0.976471, 0.14902, 0.447059, 1),
"else": Color(0.976471, 0.14902, 0.447059, 1),
"except": Color(0.976471, 0.14902, 0.447059, 1),
"finally": Color(0.976471, 0.14902, 0.447059, 1),
"float": Color(0.4, 0.85098, 0.937255, 1),
"for": Color(0.976471, 0.14902, 0.447059, 1),
"from": Color(0.976471, 0.14902, 0.447059, 1),
"frozenset": Color(0.4, 0.85098, 0.937255, 1),
"global": Color(0.976471, 0.14902, 0.447059, 1),
"if": Color(0.976471, 0.14902, 0.447059, 1),
"import": Color(0.976471, 0.14902, 0.447059, 1),
"in": Color(0.976471, 0.14902, 0.447059, 1),
"int": Color(0.4, 0.85098, 0.937255, 1),
"is": Color(0.976471, 0.14902, 0.447059, 1),
"lambda": Color(0.976471, 0.14902, 0.447059, 1),
"list": Color(0.4, 0.85098, 0.937255, 1),
"memoryview": Color(0.4, 0.85098, 0.937255, 1),
"nonlocal": Color(0.976471, 0.14902, 0.447059, 1),
"not": Color(0.976471, 0.14902, 0.447059, 1),
"or": Color(0.976471, 0.14902, 0.447059, 1),
"pass": Color(0.976471, 0.14902, 0.447059, 1),
"raise": Color(0.976471, 0.14902, 0.447059, 1),
"range": Color(0.4, 0.85098, 0.937255, 1),
"return": Color(0.976471, 0.14902, 0.447059, 1),
"set": Color(0.4, 0.85098, 0.937255, 1),
"str": Color(0.4, 0.85098, 0.937255, 1),
"try": Color(0.976471, 0.14902, 0.447059, 1),
"tuple": Color(0.4, 0.85098, 0.937255, 1),
"while": Color(0.976471, 0.14902, 0.447059, 1),
"with": Color(0.976471, 0.14902, 0.447059, 1),
"yield": Color(0.976471, 0.14902, 0.447059, 1)
}
